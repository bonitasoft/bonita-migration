buildscript {
    repositories {
        mavenLocal()
        maven { url = 'http://repositories.rd.lan/maven/releases/' }
    }
    dependencies {
        classpath group: 'org.bonitasoft.migration.plugin', name: 'bonita-migration-plugins',
                version: '2.26.0-SNAPSHOT'
    }
}

apply plugin: 'application'
apply plugin: 'clean-db'
apply plugin: 'migration-dist'

database {
    dbvendor = System.getProperty("db.vendor", "postgres")
    dburl = System.getProperty("db.url", "jdbc:postgresql://localhost:5432/migration");
    dbuser = System.getProperty("db.user", "bonita")
    dbpassword = System.getProperty("db.password", "bpm")
    dbdriverClass = System.getProperty("db.driverClass", "org.postgresql.Driver")
    dbRootUser = System.getProperty("db.root.user", "postgres")
    dbRootPassword = System.getProperty("db.root.password", "postgres")
    classpath = project.configurations.drivers
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.4.4"
    compile "com.github.zafarkhaja:java-semver:0.9.0"
    testRuntime "cglib:cglib-nodep:2.2"
    testRuntime 'org.objenesis:objenesis:1.2'
    testCompile('org.dbunit:dbunit:2.5.1')
    testCompile group: 'com.oracle', name: 'ojdbc', version: '6'
    testCompile group: 'com.microsoft.jdbc', name: 'sqlserver', version: '6.0.8112.100_41'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile group: 'org.assertj', name: 'assertj-core', version: '1.5.0'
    testCompile group: 'xmlunit', name: 'xmlunit', version: '1.5'
}

startScripts {
    // Fail on windows OS
    // classpath = files('$APP_HOME/lib/*')
    // Workaround inspired of https://gist.github.com/jlmelville/2bfe9277e9e2c0ff79b6
    // and http://stackoverflow.com/questions/25227198/how-to-pass-a-reference-to-distribution-home-directory-using-gradle-application
    doLast {
      windowsScript.text = windowsScript.text.replaceFirst('(set CLASSPATH=%APP_HOME%\\\\lib\\\\).*', '$1*')
      unixScript.text = unixScript.text.replaceFirst('(CLASSPATH=\\$APP_HOME/lib/).*', '$1*')
    }
}

sourceSets {
    intTest {
        groovy {
            srcDirs = ['src/it/groovy']
        }
        resources {
            srcDirs = ['src/it/resources']
        }
        compileClasspath += sourceSets.test.compileClasspath
    }
}

task("testJar", type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output+sourceSets.intTest.output
}

artifacts {
    archives tasks.testJar
}
tasks.install.dependsOn tasks.testJar
